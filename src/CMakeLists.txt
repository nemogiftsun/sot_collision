# Libraries DEFINITIONS and INCLUDES

INCLUDE(../cmake/python.cmake)

FINDPYTHON()

SET(LIBRARY_NAME ${PROJECT_NAME} )

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include ${PYTHON_INCLUDE_DIRS})

# provide path to dependency libraries
LINK_DIRECTORIES(${DYNAMIC_GRAPH_PYTHON_LIBRARY_DIRS} ${PYTHON_LIBRARY_DIRS})


ADD_LIBRARY(${LIBRARY_NAME}
  SHARED
  sot_collision.cc
  #test_fcl_utility.cpp
  )
  

#SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES BUILD_WITH_INSTALL_RPATH True)

SET_TARGET_PROPERTIES(${LIBRARY_NAME}
  PROPERTIES
  SOVERSION ${PROJECT_VERSION}
  INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/lib)

# Add dynamic-graph-python compilation flags and link to dependency libraries
PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} dynamic-graph-python)
PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} dynamic-graph)
PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} fcl)
PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} hpp-fcl)
PKG_CONFIG_USE_DEPENDENCY(${LIBRARY_NAME} sot-core)

INSTALL(TARGETS ${LIBRARY_NAME}
  DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

SET(NEW_ENTITY_CLASS
  SotCollision
  )

DYNAMIC_GRAPH_PYTHON_MODULE("sotcollision" ${LIBRARY_NAME} wrap)

PKG_CONFIG_USE_DEPENDENCY(wrap dynamic-graph-python)
PKG_CONFIG_USE_DEPENDENCY(wrap dynamic-graph)
PKG_CONFIG_USE_DEPENDENCY(wrap fcl)
PKG_CONFIG_USE_DEPENDENCY(wrap hpp-fcl)

message(${PYTHON_SITELIB})

